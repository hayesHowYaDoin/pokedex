name: Release

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  # debian:
  #   name: Debian Package
  #   runs-on: [ubuntu-latest]
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2
      
  #     - name: Install Nix
  #       uses: DeterminateSystems/nix-installer-action@main

  #     - name: Install Linux Dependencies
  #       if: ${{ runner.os == 'Linux' }}
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install --no-install-recommends -y libasound2-dev

  #     - name: Enter Development Environment
  #       run: nix develop

  #     - name: Build Debian Package
  #       run: cargo deb
  lint:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.rustversion.outputs.rustversion }}
    steps:
    - uses: actions/checkout@v2
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y libasound2-dev
    - uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    - uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
    - uses: actions-rs/cargo@v1
      with:
        command: check
    - run: cargo pkgid
    - run: 'echo "$(cargo pkgid | cut -d# -f2)"'
    - id: rustversion
      run: 'echo "::set-output name=rustversion::$(cargo pkgid | cut -d# -f2)"'
  build:
    needs: lint
    name: 'build-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install System Dependencies
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y libasound2-dev
    - name: Build
      run: cargo build
    - name: Test
      run: cargo test
  debian:
    needs: [build]
    runs-on: ubuntu-latest
    name: Amd64Deb
    steps:
    - uses: actions/checkout@v2
    - run: cargo install cargo-deb
    - run: cargo deb
    # - name: Upload Deb Artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: amd64deb
    #     path: ./target/x86_64-unknown-linux-musl/debian/*