name: Continuous Deployment

# on:
#   push:
#     tags:
#       - 'v*'
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  # quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install System Dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install --no-install-recommends -y libasound2-dev
  #   - run: cargo fmt --all -- --check
  #   - run: cargo clippy -- -D warnings
  #   - run: cargo test

  # flake:
  #   # needs: quality
  #   name: 'flake-${{matrix.os}}'
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: DeterminateSystems/nix-installer-action@main
  #   - name: Install System Dependencies
  #     if: ${{ runner.os == 'Linux' }}
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install --no-install-recommends -y libasound2-dev
  #   - run: nix build .

  binaries:
    # needs: quality
    name: 'build-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-13, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    # - name: Install System Dependencies
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install --no-install-recommends -y libasound2-dev
    - run: nix develop --command cargo build --release
    - name: Zip Binaries
      run: |
        mkdir -p tmp/
        cp ./target/release/rich_pokedex tmp/
        cp ./data/pokedex.sqlite tmp/
        cp -r ./data/assets tmp/
        cd tmp
        zip -r ../rich_pokedex.zip ./*
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.run_number }}_${{ matrix.os }}
        path: 'rich_pokedex.zip'

  draft-release:
    needs: binaries
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ github.run_number }}'
          release_name: Release ${{ github.run_number }}
          body: 'Change Me'
      - uses: actions/download-artifact@v4
      - run: ls -R
      - name: Upload x86_64 Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.run_number }}_ubuntu-latest/rich_pokedex.zip
          asset_name: x86_64-linux
          asset_content_type: application/zip
      - name: Upload aarch64 Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.run_number }}_ubuntu-24.04-arm/rich_pokedex.zip
          asset_name: aarch64-linux
          asset_content_type: application/zip
      - name: Upload x86_64 MacOS Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.run_number }}_macos-13/rich_pokedex.zip
          asset_name: x86_64-macos
          asset_content_type: application/zip
      - name: Upload aarch64 MacOS Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ github.run_number }}_macos-latest/rich_pokedex.zip
          asset_name: aarch64-macos
          asset_content_type: application/zip
