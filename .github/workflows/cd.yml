name: Continuous Deployment

# on:
#   push:
#     tags:
#       - 'v*'
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  # quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install System Dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install --no-install-recommends -y libasound2-dev
  #   - run: cargo fmt --all -- --check
  #   - run: cargo clippy -- -D warnings
  #   - run: cargo test

  flake:
    # needs: quality
    name: 'flake-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    # - name: Install System Dependencies
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install --no-install-recommends -y libasound2-dev
    - run: nix develop --command nix build .

  build-amd64-linux:
    # needs: quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    # - name: Install System Dependencies
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install --no-install-recommends -y libasound2-dev

    - run: nix develop --command cargo deb
    - name: Upload Debian Package
      uses: actions/upload-artifact@v4
      with:
        name: amd64-linux-deb
        path: 'target/debian/*'

    - run: nix develop --command cargo build --release
    - name: Zip Binaries
      run: |
        mkdir -p tmp/
        cp ./target/release/rich_pokedex tmp/
        cp ./data/pokedex.sqlite tmp/
        cp -r ./data/assets tmp/
        cd tmp
        zip -r ../rich_pokedex.zip ./*
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v4
      with:
        name: amd64-linux-binaries
        path: 'rich_pokedex.zip'

  build-arm64-linux:
    # needs: quality
    runs-on: ubuntu-24.04-arm
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    # - name: Install System Dependencies
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install --no-install-recommends -y libasound2-dev
    # - run: nix develop --command cargo build --release

    - run: nix develop --command cargo deb
    - name: Upload Debian Package
      uses: actions/upload-artifact@v4
      with:
        name: arm64-linux-deb
        path: 'target/debian/*'

    - run: nix develop --command cargo build --release
    - name: Zip Binaries
      run: |
        mkdir -p tmp/
        cp ./target/release/rich_pokedex tmp/
        cp ./data/pokedex.sqlite tmp/
        cp -r ./data/assets tmp/
        cd tmp
        zip -r ../rich_pokedex.zip ./*
    - name: Upload Zipped Binaries
      uses: actions/upload-artifact@v4
      with:
        name: arm64-linux-binaries
        path: 'rich_pokedex.zip'

  build-amd64-macos:
    # needs: quality
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    - run: nix develop --command cargo build --release
    - run: ls -R
    - name: Zip Binaries
      run: |
        mkdir -p tmp/
        cp ./target/release/rich_pokedex tmp/
        cp ./data/pokedex.sqlite tmp/
        cp -r ./data/assets tmp/
        cd tmp
        zip -r ../rich_pokedex.zip ./*
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v4
      with:
        name: amd64-macos-binaries
        path: 'rich_pokedex.zip'

  build-arm64-macos:
    # needs: quality
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    - run: nix develop --command cargo build --release
    - run: ls -R
    - name: Zip Binaries
      run: |
        mkdir -p tmp/
        cp ./target/release/rich_pokedex tmp/
        cp ./data/pokedex.sqlite tmp/
        cp -r ./data/assets tmp/
        cd tmp
        zip -r ../rich_pokedex.zip ./*
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v4
      with:
        name: arm64-macos-binaries
        path: 'rich_pokedex.zip'

  draft-release:
    needs: [build-amd64-linux, build-arm64-linux, build-amd64-macos, build-arm64-macos]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ github.run_number }}'
          release_name: Release ${{ github.run_number }}
          body: 'Change Me'
      - uses: actions/download-artifact@v4
      - run: ls -R

      - name: Upload amd64 Linux Debian Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64-linux-deb/rich-pokedex_0.1.0-1_amd64.deb
          asset_name: rich-pokedex_0.1.0-1_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload amd64 Linux Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64-linux-binaries/rich_pokedex.zip
          asset_name: amd64-linux
          asset_content_type: application/zip

      - name: Upload arm64 Linux Debian Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arm64-linux-deb/rich-pokedex_0.1.0-1_arm64.deb
          asset_name: rich-pokedex_0.1.0-1_arm64.deb
          asset_content_type: application/zip

      - name: Upload arm64 Linux Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arm64-linux-binaries/rich_pokedex.zip
          asset_name: arm64-linux
          asset_content_type: application/zip
  
      - name: Upload amd64 MacOS Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./amd64-macos-binaries/rich_pokedex.zip
          asset_name: amd64-macos
          asset_content_type: application/zip

      - name: Upload arm64 MacOS Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arm64-macos-binaries/rich_pokedex.zip
          asset_name: arm64-macos
          asset_content_type: application/zip
