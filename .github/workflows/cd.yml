name: Continuous Deployment

# on:
#   push:
#     tags:
#       - 'v*'
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  # quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install System Dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install --no-install-recommends -y libasound2-dev
  #   - run: cargo fmt --all -- --check
  #   - run: cargo clippy -- -D warnings
  #   - run: cargo test

  flake:
    needs: quality
    name: 'flake-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    - name: Install System Dependencies
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y libasound2-dev
    - run: nix build .

  binaries:
    needs: quality
    name: 'build-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    # - name: Install System Dependencies
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install --no-install-recommends -y libasound2-dev
    - run: nix develop --command cargo build --release
    - name: Zip binaries
      run: 'zip -r rich_pokedex_${{ github.ref }}_${{ matrix.os }}.zip ./result/bin ./result/share'
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v4
      with:
        path: 'rich_pokedex_${{ github.ref }}_${{ matrix.os }}.zip'
    - name: Upload Bin Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: ./target/release/rich_pokedex

  # draft-release:
  #   needs: binaries
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: '${{ github.ref }}'
  #         release_name: Release ${{ github.ref }}
  #         body: 'Change Me'
  #         draft: true
  #         prerelease: true
  #     - uses: actions/download-artifact@v2
  #     - run: ls -lhaexecutable
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./target/release/rich_pokedex
  #         asset_name: 'rich_pokedex_${{ github.ref }}_linux'
  #         asset_content_type: application/octet-stream
  #     - name: Upload Macos Release Asset
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./macos/rich_pokedex_${{ github.ref }}_macos.zip
  #         asset_name: 'rich_pokedex_${{ github.ref }}_macos.zip'
  #         asset_content_type: application/zip
