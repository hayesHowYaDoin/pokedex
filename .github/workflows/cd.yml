name: Continuous Deployment

# on:
#   push:
#     tags:
#       - 'v*'
on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  # quality:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Install System Dependencies
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install --no-install-recommends -y libasound2-dev
  #   - run: cargo fmt --all -- --check
  #   - run: cargo clippy -- -D warnings
  #   - run: cargo test

  # flake:
  #   # needs: quality
  #   name: 'flake-${{matrix.os}}'
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: DeterminateSystems/nix-installer-action@main
  #   - name: Install System Dependencies
  #     if: ${{ runner.os == 'Linux' }}
  #     run: |
  #       sudo apt-get update
  #       sudo apt-get install --no-install-recommends -y libasound2-dev
  #   - run: nix build .

  binaries:
    # needs: quality
    name: 'build-${{matrix.os}}'
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
    steps:
    - uses: actions/checkout@v2
    - uses: DeterminateSystems/nix-installer-action@main
    # - name: Install System Dependencies
    #   if: ${{ runner.os == 'Linux' }}
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install --no-install-recommends -y libasound2-dev
    - run: nix develop --command cargo build --release
    - name: Zip Binaries
      run: zip -j rich_pokedex_v0.0.1_${{ matrix.os }}.zip ./target/release/rich_pokedex
    - name: Upload Zipped Artifact
      uses: actions/upload-artifact@v4
      with:
        name: rich_pokedex_${{ matrix.os }}
        path: 'rich_pokedex_v0.0.1_${{ matrix.os }}.zip'
    # - name: Upload Bin Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: rich_pokedex_${{ matrix.os }}
    #     path: ./target/release/rich_pokedex

  draft-release:
    needs: binaries
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: '${{ github.ref }}'
          release_name: Release ${{ github.ref }}
          body: 'Change Me'
          draft: true
          prerelease: true
          
      - uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Upload x86_64 Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rich_pokedex_ubuntu-latest.zip
          asset_name: rich_pokedex_x86_64-linux
          asset_content_type: application/zip
      - name: Upload aarch64 Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./rich_pokedex_ubuntu-24.04-arm.zip
          asset_name: rich_pokedex_aarch64-linux
          asset_content_type: application/zip
